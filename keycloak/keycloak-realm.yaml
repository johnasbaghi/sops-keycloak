apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: dev-test-realm
spec:
  keycloakCRName: keycloak
  placeholders:
    ENV_KEY:
      secret:
        name: sops-keycloak-harbor-client-secret
        key: client-secret
  realm:
    accessCodeLifespan: 60
    accessCodeLifespanLogin: 1800
    accessCodeLifespanUserAction: 300
    accessTokenLifespan: 300
    accessTokenLifespanForImplicitFlow: 900
    accountTheme: ""
    actionTokenGeneratedByAdminLifespan: 43200
    actionTokenGeneratedByUserLifespan: 300
    adminEventsDetailsEnabled: false
    adminEventsEnabled: true
    adminPermissionsEnabled: false
    adminTheme: ""
    attributes:
      adminEventsExpiration: ""
      cibaAuthRequestedUserHint: login_hint
      cibaBackchannelTokenDeliveryMode: poll
      cibaExpiresIn: "120"
      cibaInterval: "5"
      clientOfflineSessionIdleTimeout: "0"
      clientOfflineSessionMaxLifespan: "0"
      clientSessionIdleTimeout: "0"
      clientSessionMaxLifespan: "0"
      darkMode: "true"
      oauth2DeviceCodeLifespan: "600"
      oauth2DevicePollingInterval: "5"
      parRequestUriLifespan: "60"
      realmReusableOtpCode: "false"
    authenticationFlows:
      - alias: Account verification options
        authenticationExecutions:
          - authenticator: idp-email-verification
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: Verify Existing Account by Re-authentication
            priority: 20
            requirement: ALTERNATIVE
            userSetupAllowed: false
        builtIn: true
        description: Method with which to verity the existing account
        id: 98c8569b-87aa-4bb8-ba27-a39a411b6861
        providerId: basic-flow
        topLevel: false
      - alias: Browser - Conditional OTP
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: Flow to determine if the OTP is required for the authentication
        id: bd2f132b-29cc-4cab-884f-0e7aad15c5f9
        providerId: basic-flow
        topLevel: false
      - alias: Direct Grant - Conditional OTP
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: direct-grant-validate-otp
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: Flow to determine if the OTP is required for the authentication
        id: 91078716-0dae-4add-93b7-bbdae9851d9b
        providerId: basic-flow
        topLevel: false
      - alias: First broker login - Conditional OTP
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: Flow to determine if the OTP is required for the authentication
        id: 51fa9cb4-467a-426e-a649-2884fcb85d2b
        providerId: basic-flow
        topLevel: false
      - alias: Handle Existing Account
        authenticationExecutions:
          - authenticator: idp-confirm-link
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: Account verification options
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: Handle what to do if there is existing account with same email/username like authenticated identity provider
        id: d399955b-6ab1-4e70-b41f-7c2a72adcb35
        providerId: basic-flow
        topLevel: false
      - alias: Reset - Conditional OTP
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: reset-otp
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.
        id: d094da82-44a9-4bef-b94b-6753227f9f63
        providerId: basic-flow
        topLevel: false
      - alias: User creation or linking
        authenticationExecutions:
          - authenticator: idp-create-user-if-unique
            authenticatorConfig: create unique user config
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: Handle Existing Account
            priority: 20
            requirement: ALTERNATIVE
            userSetupAllowed: false
        builtIn: true
        description: Flow for the existing/non-existing user alternatives
        id: d6ba3d43-a6e1-48dc-9af3-c14ae6e29915
        providerId: basic-flow
        topLevel: false
      - alias: Verify Existing Account by Re-authentication
        authenticationExecutions:
          - authenticator: idp-username-password-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: First broker login - Conditional OTP
            priority: 20
            requirement: CONDITIONAL
            userSetupAllowed: false
        builtIn: true
        description: Reauthentication of existing account
        id: a34c263c-b04a-4414-a488-24e0de5ff3c8
        providerId: basic-flow
        topLevel: false
      - alias: browser
        authenticationExecutions:
          - authenticator: auth-cookie
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: DISABLED
            userSetupAllowed: false
          - authenticator: identity-provider-redirector
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 25
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: forms
            priority: 30
            requirement: ALTERNATIVE
            userSetupAllowed: false
        builtIn: true
        description: browser based authentication
        id: 27416675-7a98-4df7-ad43-eedf4be76e15
        providerId: basic-flow
        topLevel: true
      - alias: clients
        authenticationExecutions:
          - authenticator: client-secret
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticator: client-jwt
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticator: client-secret-jwt
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 30
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticator: client-x509
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 40
            requirement: ALTERNATIVE
            userSetupAllowed: false
        builtIn: true
        description: Base authentication for clients
        id: a71bba14-8dad-4568-8f57-4f49500a09b6
        providerId: client-flow
        topLevel: true
      - alias: direct grant
        authenticationExecutions:
          - authenticator: direct-grant-validate-username
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: direct-grant-validate-password
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: Direct Grant - Conditional OTP
            priority: 30
            requirement: CONDITIONAL
            userSetupAllowed: false
        builtIn: true
        description: OpenID Connect Resource Owner Grant
        id: 6f675c5c-0e44-485e-a0e4-aa49eddf4684
        providerId: basic-flow
        topLevel: true
      - alias: docker auth
        authenticationExecutions:
          - authenticator: docker-http-basic-authenticator
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: Used by Docker clients to authenticate against the IDP
        id: 3de374c4-0a36-44eb-886d-4d93f2816b85
        providerId: basic-flow
        topLevel: true
      - alias: first broker login
        authenticationExecutions:
          - authenticator: idp-review-profile
            authenticatorConfig: review profile config
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: User creation or linking
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account
        id: af0b6f3e-d733-43c0-82ec-7433c89105c2
        providerId: basic-flow
        topLevel: true
      - alias: forms
        authenticationExecutions:
          - authenticator: auth-username-password-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: Browser - Conditional OTP
            priority: 20
            requirement: CONDITIONAL
            userSetupAllowed: false
        builtIn: true
        description: Username, password, otp and other auth forms.
        id: 944f845d-2c30-4a4c-8c03-fc06af99fd20
        providerId: basic-flow
        topLevel: false
      - alias: registration
        authenticationExecutions:
          - authenticator: registration-page-form
            authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: registration form
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: registration flow
        id: 00ef2bf7-dc97-4440-a9ce-7f708eeb435b
        providerId: basic-flow
        topLevel: true
      - alias: registration form
        authenticationExecutions:
          - authenticator: registration-user-creation
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: registration-password-action
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 50
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: registration-recaptcha-action
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 60
            requirement: DISABLED
            userSetupAllowed: false
        builtIn: true
        description: registration form
        id: cf1b240e-6c6b-4cfd-b5a2-f97d186117a4
        providerId: form-flow
        topLevel: false
      - alias: reset credentials
        authenticationExecutions:
          - authenticator: reset-credentials-choose-user
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: reset-credential-email
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: reset-password
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 30
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: Reset - Conditional OTP
            priority: 40
            requirement: CONDITIONAL
            userSetupAllowed: false
        builtIn: true
        description: Reset credentials for a user if they forgot their password or something
        id: 54032f54-236b-43f0-99ec-b178398e6704
        providerId: basic-flow
        topLevel: true
      - alias: saml ecp
        authenticationExecutions:
          - authenticator: http-basic-authenticator
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: true
        description: SAML ECP Profile Authentication Flow
        id: c43f227f-90a6-4ef9-badb-d9421050737a
        providerId: basic-flow
        topLevel: true
      - alias: sops x509 browser
        authenticationExecutions:
          - authenticator: auth-cookie
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: DISABLED
            userSetupAllowed: false
          - authenticator: identity-provider-redirector
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 25
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: sops x509 browser irongate
            priority: 30
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: sops x509 browser forms
            priority: 31
            requirement: ALTERNATIVE
            userSetupAllowed: false
        builtIn: false
        description: browser based authentication
        id: 5abdd850-b7e4-4a71-9b99-11ab346ca93b
        providerId: basic-flow
        topLevel: true
      - alias: sops x509 browser Browser - Conditional OTP
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: false
        description: Flow to determine if the OTP is required for the authentication
        id: 13eec8d6-3f18-4e9d-943f-496d75500cab
        providerId: basic-flow
        topLevel: false
      - alias: sops x509 browser forms
        authenticationExecutions:
          - authenticator: auth-username-password-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: sops x509 browser Browser - Conditional OTP
            priority: 20
            requirement: CONDITIONAL
            userSetupAllowed: false
        builtIn: false
        description: Username, password, otp and other auth forms.
        id: 22a5f0f2-49cb-496d-a937-a3dcb44f3795
        providerId: basic-flow
        topLevel: false
      - alias: sops x509 browser irongate
        authenticationExecutions:
          - authenticator: auth-x509-client-username-form
            authenticatorConfig: sops-x509-browser-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 0
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: false
        description: ""
        id: f24457e2-a3e2-4f63-8262-9467596f8bb2
        providerId: basic-flow
        topLevel: false
      - alias: x509 browser
        authenticationExecutions:
          - authenticator: auth-cookie
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: DISABLED
            userSetupAllowed: false
          - authenticator: identity-provider-redirector
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 25
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: x509 browser irongate
            priority: 30
            requirement: ALTERNATIVE
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: x509 browser forms
            priority: 32
            requirement: ALTERNATIVE
            userSetupAllowed: false
        builtIn: false
        description: x509 browser based authentication
        id: cad2d71e-cb2f-4bb1-aa18-0bc5b7d2743f
        providerId: basic-flow
        topLevel: true
      - alias: x509 browser Browser - Conditional OTP
        authenticationExecutions:
          - authenticator: conditional-user-configured
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: auth-otp-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 20
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: false
        description: Flow to determine if the OTP is required for the authentication
        id: 3ee53fd6-17af-4ad8-8783-0debb7d09f17
        providerId: basic-flow
        topLevel: false
      - alias: x509 browser forms
        authenticationExecutions:
          - authenticator: auth-username-password-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 10
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticatorFlow: true
            autheticatorFlow: true
            flowAlias: x509 browser Browser - Conditional OTP
            priority: 20
            requirement: CONDITIONAL
            userSetupAllowed: false
        builtIn: false
        description: Username, password, otp and other auth forms.
        id: bcd521db-3ad8-49c1-b484-cfefc9873e3a
        providerId: basic-flow
        topLevel: false
      - alias: x509 browser irongate
        authenticationExecutions:
          - authenticator: script-irongate-init-user.js
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 0
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: auth-x509-client-username-form
            authenticatorConfig: x509-browser-form
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 0
            requirement: REQUIRED
            userSetupAllowed: false
          - authenticator: script-irongate-validate-user.js
            authenticatorFlow: false
            autheticatorFlow: false
            priority: 1
            requirement: REQUIRED
            userSetupAllowed: false
        builtIn: false
        description: ""
        id: 26f2f14c-5c91-4f9e-b817-b527eaebe447
        providerId: basic-flow
        topLevel: false
    authenticatorConfig:
      - alias: create unique user config
        config:
          require.password.update.after.registration: "false"
        id: d2e2763e-7d82-4db3-a7d2-55d3c9a733c2
      - alias: review profile config
        config:
          update.profile.on.first.login: missing
        id: ac88f370-87e8-4e75-9f22-6ef7b426aadd
      - alias: sops-x509-browser-form
        config:
          x509-cert-auth.canonical-dn-enabled: "false"
          x509-cert-auth.certificate-policy-mode: All
          x509-cert-auth.confirmation-page-disallowed: "true"
          x509-cert-auth.crldp-checking-enabled: "false"
          x509-cert-auth.mapper-selection: Username or Email
          x509-cert-auth.mapping-source-selection: Subject's Common Name
          x509-cert-auth.ocsp-fail-open: "false"
          x509-cert-auth.regular-expression: (.*?)(?:$)
          x509-cert-auth.serialnumber-hex-enabled: "false"
          x509-cert-auth.timestamp-validation-enabled: "false"
        id: 67415900-e252-4b79-aee8-2b8e38be7164
      - alias: x509-browser-form
        config:
          x509-cert-auth.canonical-dn-enabled: "false"
          x509-cert-auth.certificate-policy-mode: All
          x509-cert-auth.confirmation-page-disallowed: "true"
          x509-cert-auth.crl-checking-enabled: "false"
          x509-cert-auth.crldp-checking-enabled: "false"
          x509-cert-auth.mapper-selection: Username or Email
          x509-cert-auth.mapping-source-selection: Subject's Common Name
          x509-cert-auth.ocsp-checking-enabled: "false"
          x509-cert-auth.ocsp-fail-open: "false"
          x509-cert-auth.regular-expression: (.*?)(?:$)
          x509-cert-auth.revalidate-certificate-enabled: "false"
          x509-cert-auth.serialnumber-hex-enabled: "false"
          x509-cert-auth.timestamp-validation-enabled: "false"
        id: 8aceffd4-f909-4da6-9e7c-ae4b0f2519e6
    browserFlow: sops x509 browser
    browserSecurityHeaders:
      contentSecurityPolicy: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
      contentSecurityPolicyReportOnly: ""
      referrerPolicy: no-referrer
      strictTransportSecurity: max-age=31536000; includeSubDomains
      xContentTypeOptions: nosniff
      xFrameOptions: SAMEORIGIN
      xRobotsTag: none
      xXSSProtection: 1; mode=block
    bruteForceProtected: false
    bruteForceStrategy: MULTIPLE
    clientAuthenticationFlow: clients
    clientOfflineSessionIdleTimeout: 0
    clientOfflineSessionMaxLifespan: 0
    clientPolicies:
      policies: []
    clientProfiles:
      profiles: []
    clientScopeMappings:
      account:
        - client: account-console
          roles:
            - manage-account
            - view-groups
    clientScopes:
      - attributes:
          display.on.consent.screen: "false"
          include.in.token.scope: "false"
        description: OpenID Connect scope for add all basic claims to the token
        id: fbc0ac32-d110-45d6-9539-b9a050bd4038
        name: basic
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              introspection.token.claim: "true"
            consentRequired: false
            id: 6e7528f4-e310-497a-aa04-430fb4d227b5
            name: sub
            protocol: openid-connect
            protocolMapper: oidc-sub-mapper
          - config:
              access.token.claim: "true"
              claim.name: auth_time
              id.token.claim: "true"
              introspection.token.claim: "true"
              jsonType.label: long
              user.session.note: AUTH_TIME
            consentRequired: false
            id: 99dbe4c2-efe6-43a6-b0b4-7a9e25778981
            name: auth_time
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
      - attributes:
          consent.screen.text: ""
          display.on.consent.screen: "false"
          dynamic.scope.regexp: minio-authorization:*
          gui.order: ""
          include.in.token.scope: "true"
          is.dynamic.scope: "false"
        description: ""
        id: a02ee8d3-a307-4f94-a490-0d09c8d58945
        name: minio-authorization
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              aggregate.attrs: "true"
              claim.name: policy
              id.token.claim: "true"
              introspection.token.claim: "true"
              jsonType.label: String
              lightweight.claim: "true"
              multivalued: "true"
              user.attribute: policy
              userinfo.token.claim: "true"
            consentRequired: false
            id: f878dbcc-6eaa-4214-8a6d-ef491e18490d
            name: minio-policy-mapper
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
      - attributes:
          consent.screen.text: ${addressScopeConsentText}
          display.on.consent.screen: "true"
          include.in.token.scope: "true"
        description: 'OpenID Connect built-in scope: address'
        id: b232021e-71d3-4d00-a188-ebb20b24124e
        name: address
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              id.token.claim: "true"
              user.attribute.country: country
              user.attribute.formatted: formatted
              user.attribute.locality: locality
              user.attribute.postal_code: postal_code
              user.attribute.region: region
              user.attribute.street: street
              userinfo.token.claim: "true"
            consentRequired: false
            id: 4866f974-57fa-45d6-93b9-cee14dde60a8
            name: address
            protocol: openid-connect
            protocolMapper: oidc-address-mapper
      - attributes:
          consent.screen.text: ${emailScopeConsentText}
          display.on.consent.screen: "true"
          include.in.token.scope: "true"
        description: 'OpenID Connect built-in scope: email'
        id: ad9f941d-747a-482a-ad70-ea31b96436f8
        name: email
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: email
              id.token.claim: "true"
              multivalued: "false"
              userinfo.token.claim: "true"
            consentRequired: false
            id: 37d49ccf-8466-4a82-a579-84d4d4cd5a3e
            name: irongate email
            protocol: openid-connect
            protocolMapper: script-irongate-email-mapper.js
          - config:
              access.token.claim: "true"
              claim.name: email_verified
              id.token.claim: "true"
              jsonType.label: boolean
              user.attribute: emailVerified
              userinfo.token.claim: "true"
            consentRequired: false
            id: c3c6c5a7-0d81-43b3-8915-782224987428
            name: email verified
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
      - attributes:
          consent.screen.text: ${samlRoleListScopeConsentText}
          display.on.consent.screen: "true"
        description: SAML role list
        id: d1c5106e-c628-4cee-a3af-52b4973f81fb
        name: role_list
        protocol: saml
        protocolMappers:
          - config:
              attribute.name: Role
              attribute.nameformat: Basic
              single: "false"
            consentRequired: false
            id: 689b0706-1e86-43d0-8a1b-b07e5fb9c78c
            name: role list
            protocol: saml
            protocolMapper: saml-role-list-mapper
      - attributes:
          display.on.consent.screen: "false"
          include.in.token.scope: "false"
        description: Specific scope for a client enabled for service accounts
        id: b082bb6c-280f-423b-ab7d-4962aab21665
        name: service_account
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: clientHost
              id.token.claim: "true"
              introspection.token.claim: "true"
              jsonType.label: String
              user.session.note: clientHost
            consentRequired: false
            id: bd97bdcd-192c-4889-851c-abbc55107db0
            name: Client Host
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
          - config:
              access.token.claim: "true"
              claim.name: clientAddress
              id.token.claim: "true"
              introspection.token.claim: "true"
              jsonType.label: String
              user.session.note: clientAddress
            consentRequired: false
            id: fc2c7333-65c8-4e28-ad58-86bab8e2e82c
            name: Client IP Address
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
          - config:
              access.token.claim: "true"
              claim.name: client_id
              id.token.claim: "true"
              introspection.token.claim: "true"
              jsonType.label: String
              user.session.note: client_id
            consentRequired: false
            id: ae344573-11c8-4d7e-b0b7-dae2e7a22935
            name: Client ID
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
      - attributes:
          consent.screen.text: ""
          display.on.consent.screen: "false"
          gui.order: ""
          include.in.token.scope: "true"
        description: ""
        id: 51922417-14c5-4758-8a5c-6b229daef96d
        name: groups
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: groups
              full.path: "false"
              id.token.claim: "true"
              multivalued: "true"
              userinfo.token.claim: "true"
            consentRequired: false
            id: 28258b8e-9edb-49de-b2b2-add1a84f693a
            name: groups
            protocol: openid-connect
            protocolMapper: oidc-group-membership-mapper
      - attributes:
          display.on.consent.screen: "false"
          include.in.token.scope: "false"
        description: OpenID Connect scope for add acr (authentication context class reference) to the token
        id: a194f145-37ea-48a3-9736-ad59eed3ce50
        name: acr
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              id.token.claim: "true"
              userinfo.token.claim: "true"
            consentRequired: false
            id: 011e9f77-023f-418a-a33a-8f735c7f8634
            name: acr loa level
            protocol: openid-connect
            protocolMapper: oidc-acr-mapper
      - attributes:
          consent.screen.text: ""
          display.on.consent.screen: "false"
          include.in.token.scope: "false"
        description: OpenID Connect scope for add allowed web origins to the access token
        id: 27e7dda6-d4bf-4f78-ae4e-be5616aa1c33
        name: web-origins
        protocol: openid-connect
        protocolMappers:
          - config: {}
            consentRequired: false
            id: ab621672-a01e-4138-9808-5556433cd272
            name: allowed web origins
            protocol: openid-connect
            protocolMapper: oidc-allowed-origins-mapper
      - attributes:
          consent.screen.text: ""
          display.on.consent.screen: "false"
          gui.order: ""
          include.in.token.scope: "true"
        description: ""
        id: 9f073689-a0f3-4f34-a0d1-f5842b8b27eb
        name: tenants
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: tenant_ids
              id.token.claim: "true"
              multivalued: "true"
              userinfo.token.claim: "true"
            consentRequired: false
            id: 4db15f83-3ec5-4714-8a94-f959ddf27941
            name: tenantIds
            protocol: openid-connect
            protocolMapper: script-irongate-tenant-mapper.js
      - attributes:
          consent.screen.text: ${offlineAccessScopeConsentText}
          display.on.consent.screen: "true"
        description: 'OpenID Connect built-in scope: offline_access'
        id: 599df90c-065a-4127-b3ec-47ee46888bbc
        name: offline_access
        protocol: openid-connect
      - attributes:
          consent.screen.text: ${phoneScopeConsentText}
          display.on.consent.screen: "true"
          include.in.token.scope: "true"
        description: 'OpenID Connect built-in scope: phone'
        id: 0c1bca19-3f72-45bc-81dc-18246e32dbef
        name: phone
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: phone_number
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: phoneNumber
              userinfo.token.claim: "true"
            consentRequired: false
            id: 7e244b2a-7742-43d5-b587-8d7afe5bdbeb
            name: phone number
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: phone_number_verified
              id.token.claim: "true"
              jsonType.label: boolean
              user.attribute: phoneNumberVerified
              userinfo.token.claim: "true"
            consentRequired: false
            id: ee5ecb5a-1e9c-43e1-93a8-93a4579e4f0c
            name: phone number verified
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
      - attributes:
          consent.screen.text: ${profileScopeConsentText}
          display.on.consent.screen: "true"
          include.in.token.scope: "true"
        description: 'OpenID Connect built-in scope: profile'
        id: df515692-d054-4fe1-83a9-88f03b56feca
        name: profile
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              id.token.claim: "true"
              userinfo.token.claim: "true"
            consentRequired: false
            id: 75d09118-4d21-43a6-ac19-ff6b1efc2508
            name: full name
            protocol: openid-connect
            protocolMapper: oidc-full-name-mapper
          - config:
              access.token.claim: "true"
              claim.name: zoneinfo
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: zoneinfo
              userinfo.token.claim: "true"
            consentRequired: false
            id: 44967c8b-406d-4e59-9346-523c77d1e331
            name: zoneinfo
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: preferred_username
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: username
              userinfo.token.claim: "true"
            consentRequired: false
            id: aed897c5-4f14-495d-9d97-aa6ba080f7ac
            name: username
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
          - config:
              access.token.claim: "true"
              claim.name: birthdate
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: birthdate
              userinfo.token.claim: "true"
            consentRequired: false
            id: c954f9ec-e32b-4cca-b91f-bf7d81578018
            name: birthdate
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: profile
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: profile
              userinfo.token.claim: "true"
            consentRequired: false
            id: ce9238a1-4202-4f65-8d36-82b1ab0717b3
            name: profile
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: updated_at
              id.token.claim: "true"
              jsonType.label: long
              user.attribute: updatedAt
              userinfo.token.claim: "true"
            consentRequired: false
            id: 21aa3281-25f7-45df-8f87-e293e79f3c3a
            name: updated at
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: picture
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: picture
              userinfo.token.claim: "true"
            consentRequired: false
            id: 67f9fea5-c942-4dc8-8c7c-e6b9bf77045d
            name: picture
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: gender
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: gender
              userinfo.token.claim: "true"
            consentRequired: false
            id: 417aa77a-3cb4-46c7-8c13-360e6e42bd2d
            name: gender
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: nickname
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: nickname
              userinfo.token.claim: "true"
            consentRequired: false
            id: ac070b0e-8099-4952-b18f-c7090829da36
            name: nickname
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: middle_name
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: middleName
              userinfo.token.claim: "true"
            consentRequired: false
            id: 383c37be-e509-41d8-899f-d6ce016cba80
            name: middle name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: family_name
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: lastName
              userinfo.token.claim: "true"
            consentRequired: false
            id: 1b00f19d-b380-4d12-bf20-4914924b18e2
            name: family name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
          - config:
              access.token.claim: "true"
              claim.name: given_name
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: firstName
              userinfo.token.claim: "true"
            consentRequired: false
            id: d5c4308e-8ebf-4e41-af28-e9f9f063f30c
            name: given name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
          - config:
              access.token.claim: "true"
              claim.name: website
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: website
              userinfo.token.claim: "true"
            consentRequired: false
            id: 18f995e7-141f-410f-a2d1-94ebc1594479
            name: website
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
          - config:
              access.token.claim: "true"
              claim.name: locale
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: locale
              userinfo.token.claim: "true"
            consentRequired: false
            id: 19c78b63-871c-46be-9f16-98cb23b64751
            name: locale
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
      - attributes:
          display.on.consent.screen: "false"
          include.in.token.scope: "true"
        description: Microprofile - JWT built-in scope
        id: 80d89b9d-d913-4857-aad1-34ed69d105c2
        name: microprofile-jwt
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: groups
              id.token.claim: "true"
              jsonType.label: String
              multivalued: "true"
              user.attribute: foo
              userinfo.token.claim: "true"
            consentRequired: false
            id: ee08dcdb-1c1d-4b7d-aaf6-0098c0ce1cc3
            name: groups
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
          - config:
              access.token.claim: "true"
              claim.name: upn
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: username
              userinfo.token.claim: "true"
            consentRequired: false
            id: 0aee5d5a-e0cf-48ed-93b3-ade283f8c11b
            name: upn
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
      - attributes:
          consent.screen.text: ${rolesScopeConsentText}
          display.on.consent.screen: "true"
          include.in.token.scope: "false"
        description: OpenID Connect scope for add user roles to the access token
        id: 8aeb8ca2-c9e6-4127-9aef-a4d29ba80299
        name: roles
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: resource_access.${client_id}.roles
              jsonType.label: String
              multivalued: "true"
              user.attribute: foo
            consentRequired: false
            id: 470a6151-0d1f-45c6-9517-8c7520ffbbdf
            name: client roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
          - config: {}
            consentRequired: false
            id: b009ccd5-3579-428e-946a-57bd99a1117e
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
          - config:
              access.token.claim: "true"
              claim.name: realm_access.roles
              jsonType.label: String
              multivalued: "true"
              user.attribute: foo
            consentRequired: false
            id: 5980f814-6ffc-4573-aa28-8ad778c636d5
            name: realm roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
      - attributes:
          consent.screen.text: ""
          display.on.consent.screen: "false"
          gui.order: ""
          include.in.token.scope: "true"
        description: ""
        id: db05cec8-fc9a-481b-bdb6-9687aa2653f7
        name: internal_groups
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: internal_groups
              id.token.claim: "true"
              multivalued: "true"
              userinfo.token.claim: "true"
            consentRequired: false
            id: 243513b2-21cd-455e-9731-56795217b7a3
            name: internal groups
            protocol: openid-connect
            protocolMapper: script-irongate-internal-mapper.js
    clientSessionIdleTimeout: 0
    clientSessionMaxLifespan: 0
    clients:
      - alwaysDisplayInConsole: false
        attributes:
          post.logout.redirect.uris: +
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: /realms/dev-test/account/
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: account
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        directAccessGrantsEnabled: false
        enabled: true
        frontchannelLogout: false
        fullScopeAllowed: false
        id: c451993f-d6e1-4d0b-a962-cb500eee0847
        implicitFlowEnabled: false
        name: ${client_account}
        nodeReRegistrationTimeout: 0
        notBefore: 0
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
        protocol: openid-connect
        publicClient: true
        redirectUris:
          - /realms/dev-test/account/*
        rootUrl: ${authBaseUrl}
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins: []
      - alwaysDisplayInConsole: false
        attributes:
          pkce.code.challenge.method: S256
          post.logout.redirect.uris: +
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: /realms/dev-test/account/
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: account-console
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        directAccessGrantsEnabled: false
        enabled: true
        frontchannelLogout: false
        fullScopeAllowed: false
        id: a4037754-ab5c-4621-bfa5-9976dfe6e469
        implicitFlowEnabled: false
        name: ${client_account-console}
        nodeReRegistrationTimeout: 0
        notBefore: 0
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
        protocol: openid-connect
        protocolMappers:
          - config: {}
            consentRequired: false
            id: 2b3ce055-91c1-421a-abee-5a7b67490df1
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
        publicClient: true
        redirectUris:
          - /realms/dev-test/account/*
        rootUrl: ${authBaseUrl}
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins: []
      - alwaysDisplayInConsole: false
        attributes:
          client.use.lightweight.access.token.enabled: "true"
          post.logout.redirect.uris: +
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: admin-cli
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: false
        fullScopeAllowed: true
        id: 849769bf-35d2-4c03-ae97-e2a91297f85b
        implicitFlowEnabled: false
        name: ${client_admin-cli}
        nodeReRegistrationTimeout: 0
        notBefore: 0
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
        protocol: openid-connect
        publicClient: true
        redirectUris: []
        serviceAccountsEnabled: false
        standardFlowEnabled: false
        surrogateAuthRequired: false
        webOrigins: []
      - adminUrl: https://argocd.orlandotorres.dev
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1735705932"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          post.logout.redirect.uris: +
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: /applications
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: argocd-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: 0e4714bc-c024-48b8-b192-d29a5e8c52d7
        implicitFlowEnabled: false
        name: ArgoCD Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        publicClient: false
        redirectUris:
          - /auth/callback
        rootUrl: https://argocd.orlandotorres.dev
        secret: Trib33Jjp0r8tQS1NCkpY1YQMaISVlJC
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://argocd.orlandotorres.dev
      - adminUrl: https://argo-workflows.orlandotorres.dev
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1735706964"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          post.logout.redirect.uris: +
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: /workflows
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: argo-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: f0d6eb71-ad05-41cc-a21c-315d095321df
        implicitFlowEnabled: false
        name: Argo Workflows Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        publicClient: false
        redirectUris:
          - /oauth2/callback
        rootUrl: https://argo-workflows.orlandotorres.dev
        secret: DnbqWVVvIL8OJJ6zicWLIQikuVJy529t
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://argo-workflows.orlandotorres.dev
      - alwaysDisplayInConsole: false
        attributes:
          post.logout.redirect.uris: +
          realm_client: "true"
        authenticationFlowBindingOverrides: {}
        bearerOnly: true
        clientAuthenticatorType: client-secret
        clientId: broker
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        directAccessGrantsEnabled: false
        enabled: true
        frontchannelLogout: false
        fullScopeAllowed: false
        id: 5f1bc69e-3570-4d4d-ab82-e670b1340f3a
        implicitFlowEnabled: false
        name: ${client_broker}
        nodeReRegistrationTimeout: 0
        notBefore: 0
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
        protocol: openid-connect
        publicClient: false
        redirectUris: []
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins: []
      - adminUrl: https://grafana.orlandotorres.dev
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1736471923"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: ""
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: grafana-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - offline_access
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: f98e68c9-84fb-4cff-97a6-06f683128b59
        implicitFlowEnabled: false
        name: Grafana Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: roles
              id.token.claim: "true"
              introspection.token.claim: "true"
              jsonType.label: String
              lightweight.claim: "false"
              multivalued: "true"
              userinfo.token.claim: "true"
              usermodel.clientRoleMapping.clientId: grafana-prod
            consentRequired: false
            id: 5294bb9f-d608-4f34-b98c-601dfbdf0a09
            name: client roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
        publicClient: false
        redirectUris:
          - /login/generic_oauth
        rootUrl: https://grafana.orlandotorres.dev
        secret: pvXlCpL1NyvaslgzBCrWHhmLpcSTcGNp
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://grafana.orlandotorres.dev
      - adminUrl: https://sops-harbor.orlandotorres.dev
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1735706688"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          post.logout.redirect.uris: +
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: ""
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: harbor-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: f6f99de5-633c-4611-9d9e-a60dde37dd4e
        implicitFlowEnabled: false
        name: Harbor Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        publicClient: false
        redirectUris:
          - /c/oidc/callback
        rootUrl: https://sops-harbor.orlandotorres.dev
        secret: "${ENV_KEY}"
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://sops-harbor.orlandotorres.dev
      - adminUrl: https://illumina.orlandotorres.dev
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: ""
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: illumina-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: false
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: bc736265-b415-4a80-8f56-e0f9fddc28f2
        implicitFlowEnabled: false
        name: Illumina Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        publicClient: true
        redirectUris:
          - /api/auth/callback/keycloak
        rootUrl: https://illumina.orlandotorres.dev
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://illumina.orlandotorres.dev
      - adminUrl: https://minio.orlandotorres.dev
        alwaysDisplayInConsole: true
        attributes:
          access.token.lifespan: "3600"
          acr.loa.map: '{}'
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1735706873"
          client_credentials.use_refresh_token: "false"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          post.logout.redirect.uris: +
          realm_client: "false"
          require.pushed.authorization.requests: "false"
          tls.client.certificate.bound.access.tokens: "false"
          token.response.type.bearer.lower-case: "false"
          use.jwks.url: "true"
          use.refresh.tokens: "true"
        authenticationFlowBindingOverrides: {}
        baseUrl: /realms/dev-test/account/
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: minio-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - minio-authorization
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: 9612d226-6bf4-46d5-966c-0c6406711f6b
        implicitFlowEnabled: false
        name: MinIO Tenant Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        publicClient: false
        redirectUris:
          - /oauth_callback
        rootUrl: https://minio.orlandotorres.dev
        secret: zH9XPCHqjnzxME7IQRNmWK14u7qTIPVs
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://minio.orlandotorres.dev
      - adminUrl: https://open-webui.orlandotorres.dev
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1738491961"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: ""
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: open-webui-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: bc1f0026-4e4b-4b76-9f2e-bae9c3131470
        implicitFlowEnabled: false
        name: Open WebUI Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: resource_access.${client_id}.roles
              id.token.claim: "true"
              introspection.token.claim: "true"
              jsonType.label: String
              lightweight.claim: "false"
              multivalued: "true"
              user.attribute: foo
              userinfo.token.claim: "false"
              usermodel.clientRoleMapping.clientId: open-webui-prod
            consentRequired: false
            id: eb08ee81-3239-4cf2-b9e1-4f136f46d3e1
            name: client roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
        publicClient: false
        redirectUris:
          - /oauth/oidc/callback
        rootUrl: https://open-webui.orlandotorres.dev
        secret: jaiDXffHVy1g0s6VG7OOApodVj1vRmaE
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins: []
      - adminUrl: https://outline.orlandotorres.dev
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1736059212"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: ""
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: outline-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: afbfb5cf-67f4-4fc4-aa87-18863ca19853
        implicitFlowEnabled: false
        name: Outline Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        publicClient: false
        redirectUris:
          - /auth/oidc.callback
        rootUrl: https://outline.orlandotorres.dev
        secret: sypgwZpJbbD8stJ5yCBu7WHzr3hSrtlT
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://outline.orlandotorres.dev
      - alwaysDisplayInConsole: false
        attributes:
          post.logout.redirect.uris: +
          realm_client: "true"
        authenticationFlowBindingOverrides: {}
        bearerOnly: true
        clientAuthenticatorType: client-secret
        clientId: realm-management
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        directAccessGrantsEnabled: false
        enabled: true
        frontchannelLogout: false
        fullScopeAllowed: false
        id: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
        implicitFlowEnabled: false
        name: ${client_realm-management}
        nodeReRegistrationTimeout: 0
        notBefore: 0
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
        protocol: openid-connect
        publicClient: false
        redirectUris: []
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins: []
      - alwaysDisplayInConsole: false
        attributes:
          client.use.lightweight.access.token.enabled: "true"
          pkce.code.challenge.method: S256
          post.logout.redirect.uris: +
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: /admin/dev-test/console/
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: security-admin-console
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        directAccessGrantsEnabled: false
        enabled: true
        frontchannelLogout: false
        fullScopeAllowed: true
        id: 75011b0e-eb7d-4cb6-8c75-f8f1a823ba53
        implicitFlowEnabled: false
        name: ${client_security-admin-console}
        nodeReRegistrationTimeout: 0
        notBefore: 0
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: locale
              id.token.claim: "true"
              jsonType.label: String
              user.attribute: locale
              userinfo.token.claim: "true"
            consentRequired: false
            id: 3c7264f8-4db7-4f98-a4a5-3ca198eaa751
            name: locale
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
        publicClient: true
        redirectUris:
          - /admin/dev-test/console/*
        rootUrl: ${authAdminUrl}
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - +
      - adminUrl: ""
        alwaysDisplayInConsole: false
        attributes:
          display.on.consent.screen: "false"
          realm_client: "false"
          saml.allow.ecp.flow: "false"
          saml.artifact.binding: "false"
          saml.artifact.binding.identifier: uRlWUWkjbWu22LRDrWX46NPpC2g=
          saml.assertion.signature: "false"
          saml.authnstatement: "true"
          saml.client.signature: "false"
          saml.encrypt: "false"
          saml.force.post.binding: "true"
          saml.onetimeuse.condition: "false"
          saml.server.signature: "true"
          saml.server.signature.keyinfo.ext: "false"
          saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer: NONE
          saml.signature.algorithm: RSA_SHA256
          saml.signing.certificate: MIICqzCCAZMCBgGUbfUMYDANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5zb25hcnF1YmUtcHJvZDAeFw0yNTAxMTYwNzExMDNaFw0zNTAxMTYwNzEyNDNaMBkxFzAVBgNVBAMMDnNvbmFycXViZS1wcm9kMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7gPLZb+qHvg3GuZmef35AZmCnzUDb2tTutmg5YimTPnFNJi5fD2OUe2+Myi4nsLiwLjbmkI6jt+BhQcC2p910S6ctVgYv8KgqrRYxPdV3bX2VSjieow92+ayG+3pdNsy3XsNj9BukuZyhfmh975A0VSecap/jY4mwFBPloh1jpF8O/7J/ZcF970CIJhoTBUsGgxClgNJLbmqbOooTWsxwlqa/Jqhy6+EVNn5mGzkusrXjrEZvULI+SJkpWIo4lNKbeiRyMmb2rTORcpGHvE5wwFEzrK6W/03QirSQ509qWhrTobtuqhAulxTwxiU0F4bO6sD/xp0TU6gUoyEWazftQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQDms4V7oAm3qk97nN+0svovGdB36kx4FQE+oVb24Qgz1hSOVLxV+9TUiGS+olwn6A56tyTKLIf62IOMpvkHseFh2LYRbxZckyNMdCppJbiMoijGC/K9BjIzTzckVgHCeyUu4mxgElJLm0mZrqktzE9K9Rgpcmf5QNuA7ZTH/mwjszJTWUX1s8QdNpOs5uDCnY5Gijtliu+L9s/o4ZZnarwLikqQPrZuEmQvuXjCkvcoZWVyREvMpPS/BEcAUdBRI4NQu7LoDG+ait+cUwF00KrE7oHVp6lEXBASv2X+XR4ssXWQkiHTkU5Di2Y6XuJ1k1/V93k/45d9H9FnLvOwIvME
          saml.signing.private.key: MIIEowIBAAKCAQEA7gPLZb+qHvg3GuZmef35AZmCnzUDb2tTutmg5YimTPnFNJi5fD2OUe2+Myi4nsLiwLjbmkI6jt+BhQcC2p910S6ctVgYv8KgqrRYxPdV3bX2VSjieow92+ayG+3pdNsy3XsNj9BukuZyhfmh975A0VSecap/jY4mwFBPloh1jpF8O/7J/ZcF970CIJhoTBUsGgxClgNJLbmqbOooTWsxwlqa/Jqhy6+EVNn5mGzkusrXjrEZvULI+SJkpWIo4lNKbeiRyMmb2rTORcpGHvE5wwFEzrK6W/03QirSQ509qWhrTobtuqhAulxTwxiU0F4bO6sD/xp0TU6gUoyEWazftQIDAQABAoIBADXXuufyE0B9Qy39J/p51x4jBXcRjYzjeSYAPFMgdgpcyF1NHUy7OhpTj17QW+9iQ9x4FQmQ6OFQM2MOAnnFb+gZxM6LNtIOa70iHiC0mQKWOrrqDE3PsuCvj+Qcjl7mhVuwDhHWA2WM5yRio97A9bXFEDDDcqZpnV+M62www3M0C27/cLdXTY4697d/TcSXUEmdRhMBTQsj2LPTB2wuk3ujJqt0ArucUncnteC8hGPvzfz0RfYuYbnAqswiLIYDeWromIL3Rmk+8MNnN5WMUbUcHRTHFptjl4lIj8guUbXiUIY8roeuZ2PLzT7IGbbIAMpKg7WnAr4r5KFWwYN3B/MCgYEA/a0JkpMY33xbeONN/himCkRXtkrRIjG+/NpO1SmcTMhxKsfwYu5TWY2e+3dBeDm3GW0CxWXXYd8hQOcD4RXvLY/SvIcTuU0FjgjINzu/2iLAw3CyhlcYQQr5eF1ZkSR6NKYVTHGE0p8aHhNCIFIjJk9cf7gfo/idiH2v/NXRmjcCgYEA8DIGsAH2nn/cjQ5f2RGqgAWYgsqxZ5VMtdCi6xCSePJfTR/5su9efzVTRTHwL3JsF+jiLT1q1aMwNchz+XPKlF6dtD+q//ocLKjciTb+cndShU5afRHigKAx7bJkEdd6Q3YCrDxV7YUu3o2q++yrdlIr3Fj1yDh3Msyk4Owvr3MCgYEAyWfWHtK9P8sbUPqflKt7QNGMFkaGjrCSY2zshB+aYfgOqZm+yL1R3dssK5k+mLayIfTD63f1Llaar037bX0dvb3f4iEYztlRHLjqRbghlY5cH4/dnf2OWy3cbe0nzK36fMyUQnIqs5LwiIpfyQuNrr/5v8mvDV+5q4Gm9YXJ+bcCgYBAJxxiJiQYcU4W3p/6+hzv1I7HYBvB7r5uUSsyXVrBsvqBPukSQZybnUKAWLYt9gGo4SqHqr++D7fwpXlURvj0Z9D3M4oYlFSyGOfOPkH3kKcZs7O3c+9rK14qflr76PFe00Yjenn41nmON4hTgQLKt2e/koMS1wH/L2laKbsSwQKBgBmafvt4q4jmqZIjjm/Fv/SDq+y+dmp+4JuIilHc7oZu6ZQS1NMsZdK+cnp/MF/1yRd0HWWZorTHwMO20DhZ5LobLyqKBLCZjGyqqFVIG+aeVMKFHbobAp6i5JxSm9isyFWv/gvhVo4feuqabR3m7PMiZrv5YTKzS2ua+LzlTzaz
          saml_force_name_id_format: "false"
          saml_name_id_format: username
          saml_signature_canonicalization_method: http://www.w3.org/2001/10/xml-exc-c14n#
        authenticationFlowBindingOverrides: {}
        baseUrl: ""
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: sonarqube-prod
        consentRequired: false
        defaultClientScopes: []
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: bebb5eee-393b-4090-b0f3-c898cfeb886a
        implicitFlowEnabled: false
        name: SonarQube Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes: []
        protocol: saml
        protocolMappers:
          - config:
              attribute.name: name
              attribute.nameformat: Basic
              user.attribute: username
            consentRequired: false
            id: 3996129d-06b1-4da6-a460-f39cae37ec8a
            name: Name
            protocol: saml
            protocolMapper: saml-user-property-mapper
          - config:
              attribute.name: groups
              attribute.nameformat: Basic
              full.path: "false"
              single: "true"
            consentRequired: false
            id: 6ca47e27-3315-4658-84e7-50eb2644e1d3
            name: Groups
            protocol: saml
            protocolMapper: saml-group-membership-mapper
          - config:
              attribute.name: login
              attribute.nameformat: Basic
              user.attribute: username
            consentRequired: false
            id: 748f8533-2516-4a77-a4b7-f2fafd43553d
            name: Login
            protocol: saml
            protocolMapper: saml-user-property-mapper
          - config:
              attribute.name: email
              attribute.nameformat: Basic
              user.attribute: pkiEmail
            consentRequired: false
            id: 7f5b67a4-b176-4c51-9bee-0c6dc62da110
            name: Email
            protocol: saml
            protocolMapper: saml-user-attribute-mapper
        publicClient: true
        redirectUris:
          - /oauth2/callback/*
        rootUrl: https://sonarqube.orlandotorres.dev
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins: []
      - adminUrl: ""
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1685294663"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          post.logout.redirect.uris: /external_logout_complete.do
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: ""
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: svcnow-test
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: false
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: 10914ac1-388f-44ac-98f3-153f3323da1f
        implicitFlowEnabled: false
        name: ServiceNow Test Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - microprofile-jwt
        protocol: openid-connect
        protocolMappers:
          - config:
              access.token.claim: "true"
              claim.name: clientId
              id.token.claim: "true"
              jsonType.label: String
              user.session.note: clientId
              userinfo.token.claim: "true"
            consentRequired: false
            id: c7260c77-8191-4c27-8348-d85f721b89ed
            name: Client ID
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
          - config:
              access.token.claim: "true"
              claim.name: clientHost
              id.token.claim: "true"
              jsonType.label: String
              user.session.note: clientHost
              userinfo.token.claim: "true"
            consentRequired: false
            id: 9178fdcb-83cd-43e6-9edc-2f4c6bfe9d98
            name: Client Host
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
          - config:
              access.token.claim: "true"
              claim.name: clientAddress
              id.token.claim: "true"
              jsonType.label: String
              user.session.note: clientAddress
              userinfo.token.claim: "true"
            consentRequired: false
            id: 84ad9318-7a10-454e-9d9d-4ed814275f1d
            name: Client IP Address
            protocol: openid-connect
            protocolMapper: oidc-usersessionmodel-note-mapper
        publicClient: false
        redirectUris:
          - https://localhost:8443/authentication/callback
          - https://dev250671.service-now.com/navpage.do
          - https://oauth.pstmn.io/v1/callback
        rootUrl: https://dev250671.service-now.com
        secret: I9UunS1g6YMcOVSO47uOVpkijGynXl8M
        serviceAccountsEnabled: true
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://dev250671.service-now.com
          - https://localhost:8443
          - https://oauth.pstmn.io
      - adminUrl: https://vault.orlandotorres.dev
        alwaysDisplayInConsole: false
        attributes:
          backchannel.logout.revoke.offline.tokens: "false"
          backchannel.logout.session.required: "true"
          client.secret.creation.time: "1735710805"
          display.on.consent.screen: "false"
          oauth2.device.authorization.grant.enabled: "false"
          oidc.ciba.grant.enabled: "false"
          post.logout.redirect.uris: +
          realm_client: "false"
        authenticationFlowBindingOverrides: {}
        baseUrl: ""
        bearerOnly: false
        clientAuthenticatorType: client-secret
        clientId: vault-prod
        consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - basic
          - email
        description: ""
        directAccessGrantsEnabled: true
        enabled: true
        frontchannelLogout: true
        fullScopeAllowed: true
        id: 5d01c3da-9bbc-4db9-9d6d-7fe5e632c003
        implicitFlowEnabled: false
        name: Vault Client
        nodeReRegistrationTimeout: -1
        notBefore: 0
        optionalClientScopes:
          - tenants
          - address
          - phone
          - offline_access
          - internal_groups
          - groups
          - microprofile-jwt
        protocol: openid-connect
        publicClient: false
        redirectUris:
          - /ui/vault/auth/oidc/oidc/callback
        rootUrl: https://vault.orlandotorres.dev
        secret: l2FLwizbuasxP2OaxXqPeBwCkyOZ4ux2
        serviceAccountsEnabled: false
        standardFlowEnabled: true
        surrogateAuthRequired: false
        webOrigins:
          - https://vault.orlandotorres.dev
    components:
      org.keycloak.keys.KeyProvider:
        - config:
            priority:
              - "100"
          id: 2fea2a56-9470-4d39-9ad9-edee4b76e657
          name: aes-generated
          providerId: aes-generated
          subComponents: {}
        - config:
            priority:
              - "100"
          id: db7329be-e3f2-4b62-b9c7-2ef3808dd4fa
          name: rsa-generated
          providerId: rsa-generated
          subComponents: {}
        - config:
            algorithm:
              - RSA-OAEP
            priority:
              - "100"
          id: f3068f38-f7ad-4148-b13f-33f1aacc51c5
          name: rsa-enc-generated
          providerId: rsa-enc-generated
          subComponents: {}
        - config:
            algorithm:
              - HS256
            priority:
              - "100"
          id: c16ab8d1-a95c-4af5-a8a3-18fa91aae9b1
          name: hmac-generated
          providerId: hmac-generated
          subComponents: {}
        - config:
            algorithm:
              - HS512
            priority:
              - "100"
          id: 2b4ef237-f48d-4880-9adb-b1d35a195e69
          name: hmac-generated-hs512
          providerId: hmac-generated
          subComponents: {}
      org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy:
        - config: {}
          id: a8fa35ff-4f8d-474e-8413-bb6494d1cde6
          name: Full Scope Disabled
          providerId: scope
          subComponents: {}
          subType: anonymous
        - config:
            max-clients:
              - "200"
          id: eef7f340-8362-4eea-a723-baa9fdef6f8f
          name: Max Clients Limit
          providerId: max-clients
          subComponents: {}
          subType: anonymous
        - config:
            allowed-protocol-mapper-types:
              - saml-role-list-mapper
              - oidc-sha256-pairwise-sub-mapper
              - oidc-usermodel-property-mapper
              - oidc-usermodel-attribute-mapper
              - oidc-full-name-mapper
              - saml-user-attribute-mapper
              - oidc-address-mapper
              - saml-user-property-mapper
          id: b73ecfe8-a142-4a2e-b402-6af5d68fd311
          name: Allowed Protocol Mapper Types
          providerId: allowed-protocol-mappers
          subComponents: {}
          subType: anonymous
        - config:
            allowed-protocol-mapper-types:
              - saml-user-attribute-mapper
              - saml-user-property-mapper
              - oidc-sha256-pairwise-sub-mapper
              - oidc-usermodel-attribute-mapper
              - oidc-address-mapper
              - oidc-usermodel-property-mapper
              - oidc-full-name-mapper
              - saml-role-list-mapper
          id: d98d78af-0a4a-4880-bbbf-1c9e7ed3d850
          name: Allowed Protocol Mapper Types
          providerId: allowed-protocol-mappers
          subComponents: {}
          subType: authenticated
        - config:
            allow-default-scopes:
              - "true"
          id: cd2eadcd-6933-4b54-8ad3-beaa086c9f12
          name: Allowed Client Scopes
          providerId: allowed-client-templates
          subComponents: {}
          subType: authenticated
        - config:
            allow-default-scopes:
              - "true"
          id: 1ff9a7be-bc1d-4005-9a72-a6234a7f4ed8
          name: Allowed Client Scopes
          providerId: allowed-client-templates
          subComponents: {}
          subType: anonymous
        - config: {}
          id: f4d40747-f3d1-401d-8862-f9ab06d48cbd
          name: Consent Required
          providerId: consent-required
          subComponents: {}
          subType: anonymous
        - config:
            client-uris-must-match:
              - "true"
            host-sending-registration-request-must-match:
              - "true"
          id: d14267c1-e107-4d7e-bf9d-d87f9f43e2b3
          name: Trusted Hosts
          providerId: trusted-hosts
          subComponents: {}
          subType: anonymous
      org.keycloak.userprofile.UserProfileProvider:
        - config:
            kc.user.profile.config:
              - '{"attributes":[{"name":"username","displayName":"${username}","validations":{"length":{"min":3,"max":255},"up-username-not-idn-homograph":{}},"annotations":{},"permissions":{"view":["admin","user"],"edit":["admin","user"]},"multivalued":false},{"name":"email","displayName":"${email}","validations":{"email":{},"length":{"max":255}},"required":{"roles":["user"]},"permissions":{"view":["admin","user"],"edit":["admin","user"]},"multivalued":false},{"name":"firstName","displayName":"${firstName}","validations":{"length":{"max":255},"person-name-prohibited-characters":{}},"required":{"roles":["user"]},"permissions":{"view":["admin","user"],"edit":["admin","user"]},"multivalued":false},{"name":"lastName","displayName":"${lastName}","validations":{"length":{"max":255},"person-name-prohibited-characters":{}},"required":{"roles":["user"]},"permissions":{"view":["admin","user"],"edit":["admin","user"]},"multivalued":false}],"groups":[{"name":"user-metadata","displayHeader":"User metadata","displayDescription":"Attributes, which refer to user metadata"}],"unmanagedAttributePolicy":"ENABLED"}'
          id: d60d6a14-0b55-424e-ae66-eb8abe07c5d9
          providerId: declarative-user-profile
          subComponents: {}
    defaultDefaultClientScopes:
      - role_list
      - profile
      - email
      - roles
      - web-origins
      - acr
      - basic
    defaultOptionalClientScopes:
      - offline_access
      - address
      - phone
      - microprofile-jwt
      - groups
      - tenants
      - internal_groups
    defaultRole:
      clientRole: false
      composite: true
      containerId: 5f81d036-8138-4174-bf42-48cd97e58824
      description: ${role_default-roles}
      id: e19d9752-61e6-4892-bd90-1b94316c2f5a
      name: default-roles-dev-test
    defaultSignatureAlgorithm: RS256
    directGrantFlow: direct grant
    dockerAuthenticationFlow: docker auth
    duplicateEmailsAllowed: false
    editUsernameAllowed: false
    emailTheme: ""
    enabled: true
    enabledEventTypes:
      - UPDATE_CONSENT_ERROR
      - SEND_RESET_PASSWORD
      - GRANT_CONSENT
      - VERIFY_PROFILE_ERROR
      - UPDATE_TOTP
      - REMOVE_TOTP
      - REVOKE_GRANT
      - LOGIN_ERROR
      - CLIENT_LOGIN
      - RESET_PASSWORD_ERROR
      - UPDATE_CREDENTIAL
      - IMPERSONATE_ERROR
      - CODE_TO_TOKEN_ERROR
      - CUSTOM_REQUIRED_ACTION
      - OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR
      - RESTART_AUTHENTICATION
      - UPDATE_PROFILE_ERROR
      - IMPERSONATE
      - LOGIN
      - UPDATE_PASSWORD_ERROR
      - OAUTH2_DEVICE_VERIFY_USER_CODE
      - CLIENT_INITIATED_ACCOUNT_LINKING
      - USER_DISABLED_BY_PERMANENT_LOCKOUT
      - OAUTH2_EXTENSION_GRANT
      - REMOVE_CREDENTIAL_ERROR
      - TOKEN_EXCHANGE
      - REGISTER
      - LOGOUT
      - AUTHREQID_TO_TOKEN
      - DELETE_ACCOUNT_ERROR
      - CLIENT_REGISTER
      - IDENTITY_PROVIDER_LINK_ACCOUNT
      - USER_DISABLED_BY_TEMPORARY_LOCKOUT
      - UPDATE_PASSWORD
      - DELETE_ACCOUNT
      - FEDERATED_IDENTITY_LINK_ERROR
      - CLIENT_DELETE
      - IDENTITY_PROVIDER_FIRST_LOGIN
      - VERIFY_EMAIL
      - CLIENT_DELETE_ERROR
      - CLIENT_LOGIN_ERROR
      - RESTART_AUTHENTICATION_ERROR
      - REMOVE_FEDERATED_IDENTITY_ERROR
      - EXECUTE_ACTIONS
      - TOKEN_EXCHANGE_ERROR
      - PERMISSION_TOKEN
      - FEDERATED_IDENTITY_OVERRIDE_LINK
      - SEND_IDENTITY_PROVIDER_LINK_ERROR
      - UPDATE_CREDENTIAL_ERROR
      - EXECUTE_ACTION_TOKEN_ERROR
      - SEND_VERIFY_EMAIL
      - OAUTH2_EXTENSION_GRANT_ERROR
      - OAUTH2_DEVICE_AUTH
      - EXECUTE_ACTIONS_ERROR
      - REMOVE_FEDERATED_IDENTITY
      - OAUTH2_DEVICE_CODE_TO_TOKEN
      - IDENTITY_PROVIDER_POST_LOGIN
      - IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR
      - FEDERATED_IDENTITY_OVERRIDE_LINK_ERROR
      - UPDATE_EMAIL
      - OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR
      - REGISTER_ERROR
      - REVOKE_GRANT_ERROR
      - LOGOUT_ERROR
      - UPDATE_EMAIL_ERROR
      - EXECUTE_ACTION_TOKEN
      - CLIENT_UPDATE_ERROR
      - UPDATE_PROFILE
      - AUTHREQID_TO_TOKEN_ERROR
      - INVITE_ORG_ERROR
      - FEDERATED_IDENTITY_LINK
      - CLIENT_REGISTER_ERROR
      - INVITE_ORG
      - SEND_VERIFY_EMAIL_ERROR
      - SEND_IDENTITY_PROVIDER_LINK
      - RESET_PASSWORD
      - CLIENT_INITIATED_ACCOUNT_LINKING_ERROR
      - OAUTH2_DEVICE_AUTH_ERROR
      - REMOVE_CREDENTIAL
      - UPDATE_CONSENT
      - REMOVE_TOTP_ERROR
      - VERIFY_EMAIL_ERROR
      - SEND_RESET_PASSWORD_ERROR
      - CLIENT_UPDATE
      - IDENTITY_PROVIDER_POST_LOGIN_ERROR
      - CUSTOM_REQUIRED_ACTION_ERROR
      - UPDATE_TOTP_ERROR
      - CODE_TO_TOKEN
      - VERIFY_PROFILE
      - GRANT_CONSENT_ERROR
      - IDENTITY_PROVIDER_FIRST_LOGIN_ERROR
    eventsEnabled: true
    eventsListeners:
      - jboss-logging
    failureFactor: 30
    firstBrokerLoginFlow: first broker login
    groups:
      - attributes: {}
        clientRoles: {}
        id: 1b7e59d6-1038-42e5-a725-b3677dd37dfe
        name: Harbor Admins
        path: /Harbor Admins
        realmRoles: []
        subGroups: []
    id: 5f81d036-8138-4174-bf42-48cd97e58824
    identityProviderMappers: []
    identityProviders: []
    internationalizationEnabled: false
    keycloakVersion: 26.1.0
    localizationTexts: {}
    loginTheme: keycloak.v2
    loginWithEmailAllowed: true
    maxDeltaTimeSeconds: 43200
    maxFailureWaitSeconds: 900
    maxTemporaryLockouts: 0
    minimumQuickLoginWaitSeconds: 60
    notBefore: 0
    oauth2DeviceCodeLifespan: 600
    oauth2DevicePollingInterval: 5
    offlineSessionIdleTimeout: 2592000
    offlineSessionMaxLifespan: 5184000
    offlineSessionMaxLifespanEnabled: false
    organizationsEnabled: false
    otpPolicyAlgorithm: HmacSHA1
    otpPolicyCodeReusable: false
    otpPolicyDigits: 6
    otpPolicyInitialCounter: 0
    otpPolicyLookAheadWindow: 1
    otpPolicyPeriod: 30
    otpPolicyType: totp
    otpSupportedApplications:
      - totpAppFreeOTPName
      - totpAppGoogleName
      - totpAppMicrosoftAuthenticatorName
    permanentLockout: false
    quickLoginCheckMilliSeconds: 1000
    realm: dev-test
    refreshTokenMaxReuse: 0
    registrationAllowed: false
    registrationEmailAsUsername: false
    registrationFlow: registration
    rememberMe: false
    requiredActions:
      - alias: CONFIGURE_TOTP
        config: {}
        defaultAction: false
        enabled: true
        name: Configure OTP
        priority: 10
        providerId: CONFIGURE_TOTP
      - alias: TERMS_AND_CONDITIONS
        config: {}
        defaultAction: false
        enabled: false
        name: Terms and Conditions
        priority: 20
        providerId: TERMS_AND_CONDITIONS
      - alias: UPDATE_PASSWORD
        config: {}
        defaultAction: false
        enabled: true
        name: Update Password
        priority: 30
        providerId: UPDATE_PASSWORD
      - alias: UPDATE_PROFILE
        config: {}
        defaultAction: false
        enabled: true
        name: Update Profile
        priority: 40
        providerId: UPDATE_PROFILE
      - alias: VERIFY_EMAIL
        config: {}
        defaultAction: false
        enabled: true
        name: Verify Email
        priority: 50
        providerId: VERIFY_EMAIL
      - alias: delete_account
        config: {}
        defaultAction: false
        enabled: false
        name: Delete Account
        priority: 60
        providerId: delete_account
      - alias: webauthn-register
        config: {}
        defaultAction: false
        enabled: true
        name: Webauthn Register
        priority: 70
        providerId: webauthn-register
      - alias: webauthn-register-passwordless
        config: {}
        defaultAction: false
        enabled: true
        name: Webauthn Register Passwordless
        priority: 80
        providerId: webauthn-register-passwordless
      - alias: delete_credential
        config: {}
        defaultAction: false
        enabled: true
        name: Delete Credential
        priority: 100
        providerId: delete_credential
      - alias: update_user_locale
        config: {}
        defaultAction: false
        enabled: true
        name: Update User Locale
        priority: 1000
        providerId: update_user_locale
    requiredCredentials:
      - password
    resetCredentialsFlow: reset credentials
    resetPasswordAllowed: false
    revokeRefreshToken: false
    roles:
      client:
        account:
          - attributes: {}
            clientRole: true
            composite: false
            containerId: c451993f-d6e1-4d0b-a962-cb500eee0847
            description: ${role_view-groups}
            id: 13102463-a159-4d6f-ae41-7afcf2e86d73
            name: view-groups
          - attributes: {}
            clientRole: true
            composite: false
            containerId: c451993f-d6e1-4d0b-a962-cb500eee0847
            description: ${role_delete-account}
            id: 6d22293b-fa98-478b-92c6-a96b3cbd3d37
            name: delete-account
          - attributes: {}
            clientRole: true
            composite: true
            composites:
              client:
                account:
                  - manage-account-links
            containerId: c451993f-d6e1-4d0b-a962-cb500eee0847
            description: ${role_manage-account}
            id: 53bd55b0-570f-48b4-852d-37cffa447f04
            name: manage-account
          - attributes: {}
            clientRole: true
            composite: false
            containerId: c451993f-d6e1-4d0b-a962-cb500eee0847
            description: ${role_view-profile}
            id: 9d06ee94-c91e-4693-8a6d-0784af9ae269
            name: view-profile
          - attributes: {}
            clientRole: true
            composite: true
            composites:
              client:
                account:
                  - view-consent
            containerId: c451993f-d6e1-4d0b-a962-cb500eee0847
            description: ${role_manage-consent}
            id: fe4e5ed9-3038-44dc-84b4-cae75e85bae1
            name: manage-consent
          - attributes: {}
            clientRole: true
            composite: false
            containerId: c451993f-d6e1-4d0b-a962-cb500eee0847
            description: ${role_view-applications}
            id: c9fdf336-fd70-406d-a78b-0a49fcee68f5
            name: view-applications
          - attributes: {}
            clientRole: true
            composite: false
            containerId: c451993f-d6e1-4d0b-a962-cb500eee0847
            description: ${role_view-consent}
            id: 3f33b61a-015e-4920-b789-e88e45e857ad
            name: view-consent
          - attributes: {}
            clientRole: true
            composite: false
            containerId: c451993f-d6e1-4d0b-a962-cb500eee0847
            description: ${role_manage-account-links}
            id: 0e71076b-6ab1-4402-b41a-6cd28989fd80
            name: manage-account-links
        account-console: []
        admin-cli: []
        argo-prod: []
        argocd-prod: []
        broker:
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 5f1bc69e-3570-4d4d-ab82-e670b1340f3a
            description: ${role_read-token}
            id: d3325370-d77a-48fe-a445-820721f6a737
            name: read-token
        grafana-prod:
          - attributes: {}
            clientRole: true
            composite: false
            containerId: f98e68c9-84fb-4cff-97a6-06f683128b59
            description: ""
            id: 4b2981eb-0bdc-435f-8e40-d0c99b2371ae
            name: viewer
          - attributes: {}
            clientRole: true
            composite: false
            containerId: f98e68c9-84fb-4cff-97a6-06f683128b59
            description: ""
            id: 2a67c196-0e6c-4fe0-a7ce-5f4395899669
            name: grafanaadmin
          - attributes: {}
            clientRole: true
            composite: false
            containerId: f98e68c9-84fb-4cff-97a6-06f683128b59
            description: ""
            id: 6d13cc86-e4a5-46c1-b2df-3cc5d50270a8
            name: admin
          - attributes: {}
            clientRole: true
            composite: false
            containerId: f98e68c9-84fb-4cff-97a6-06f683128b59
            description: ""
            id: d0df3620-1e76-4f6b-963f-0ef7d278b19d
            name: editor
        harbor-prod: []
        illumina-prod: []
        minio-prod: []
        open-webui-prod:
          - attributes: {}
            clientRole: true
            composite: false
            containerId: bc1f0026-4e4b-4b76-9f2e-bae9c3131470
            description: ""
            id: 3abf18a2-349c-449b-bd1e-c187ef9a7267
            name: user
          - attributes: {}
            clientRole: true
            composite: false
            containerId: bc1f0026-4e4b-4b76-9f2e-bae9c3131470
            description: ""
            id: f0214f35-609a-40de-9cdb-1b53f8fc155c
            name: admin
        outline-prod: []
        realm-management:
          - attributes: {}
            clientRole: true
            composite: true
            composites:
              client:
                realm-management:
                  - query-groups
                  - query-users
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_view-users}
            id: ad677015-d6e1-4a78-8145-4907c576c63f
            name: view-users
          - attributes: {}
            clientRole: true
            composite: true
            composites:
              client:
                realm-management:
                  - query-clients
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_view-clients}
            id: 279cf5bf-c8f2-460b-80eb-d7227a5de76b
            name: view-clients
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_query-groups}
            id: 79edfa93-bae6-4094-92ba-6fa0cd55b892
            name: query-groups
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_query-realms}
            id: bd774b8e-225b-416d-8f42-b85765dd07c7
            name: query-realms
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_query-clients}
            id: 3241904f-b84b-4fa2-8be9-04f8256a2316
            name: query-clients
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_manage-identity-providers}
            id: 322bdfb5-926e-4e72-81f7-076b4bdf264b
            name: manage-identity-providers
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_manage-authorization}
            id: a1cd05bd-9b12-4f4f-a245-24cd5493c735
            name: manage-authorization
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_manage-realm}
            id: 5cfd89eb-0d95-4a48-b61d-66e13a4bde96
            name: manage-realm
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_manage-users}
            id: b511ca93-1f06-4e0e-933b-9abe2d34024c
            name: manage-users
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_impersonation}
            id: a4d63ffe-4e0b-47ff-aa5b-fcb3cd21e13e
            name: impersonation
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_manage-clients}
            id: 960fb9b8-82d5-4e7d-8b1a-b6df520abb26
            name: manage-clients
          - attributes: {}
            clientRole: true
            composite: true
            composites:
              client:
                realm-management:
                  - view-users
                  - view-clients
                  - query-groups
                  - query-realms
                  - query-clients
                  - manage-identity-providers
                  - manage-authorization
                  - manage-realm
                  - manage-users
                  - impersonation
                  - manage-clients
                  - query-users
                  - view-authorization
                  - view-events
                  - manage-events
                  - create-client
                  - view-realm
                  - view-identity-providers
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_realm-admin}
            id: ad553c4a-77c0-48e9-9ed2-b1343a842c08
            name: realm-admin
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_query-users}
            id: 32a03279-c6ac-48e8-aec7-fa5db75db6fc
            name: query-users
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_view-authorization}
            id: 33237aa2-167f-49d5-b634-1054ed40b864
            name: view-authorization
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_view-events}
            id: b2a06ac9-8116-46a3-ac31-0024ea87069d
            name: view-events
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_manage-events}
            id: e52d9a35-98d8-4fdd-9c02-c52de81ec41a
            name: manage-events
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_create-client}
            id: 32030ea7-4e1f-4426-a2a2-6b3d607276bd
            name: create-client
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_view-realm}
            id: 2fa3305b-67e0-4435-889b-996e8f84f2cc
            name: view-realm
          - attributes: {}
            clientRole: true
            composite: false
            containerId: 77658bf7-fb5c-4b5d-9fcb-0437d9df12d9
            description: ${role_view-identity-providers}
            id: 0be5604b-dfa1-44d3-95a3-dff75b6a7b89
            name: view-identity-providers
        security-admin-console: []
        sonarqube-prod: []
        svcnow-test: []
        vault-prod: []
      realm:
        - attributes: {}
          clientRole: false
          composite: true
          composites:
            client:
              account:
                - manage-account
                - view-profile
            realm:
              - offline_access
              - uma_authorization
          containerId: 5f81d036-8138-4174-bf42-48cd97e58824
          description: ${role_default-roles}
          id: e19d9752-61e6-4892-bd90-1b94316c2f5a
          name: default-roles-dev-test
        - attributes: {}
          clientRole: false
          composite: false
          containerId: 5f81d036-8138-4174-bf42-48cd97e58824
          description: ${role_uma_authorization}
          id: 19a163b4-570f-4376-a5e3-7a1bf30b1951
          name: uma_authorization
        - attributes: {}
          clientRole: false
          composite: false
          containerId: 5f81d036-8138-4174-bf42-48cd97e58824
          description: ${role_offline-access}
          id: 9e5e19ee-ea26-4c87-982c-540f226d4002
          name: offline_access
    scopeMappings:
      - clientScope: offline_access
        roles:
          - offline_access
    smtpServer: {}
    sslRequired: external
    ssoSessionIdleTimeout: 1800
    ssoSessionIdleTimeoutRememberMe: 0
    ssoSessionMaxLifespan: 36000
    ssoSessionMaxLifespanRememberMe: 0
    supportedLocales: []
    userManagedAccessAllowed: false
    users:
      - createdTimestamp: 1685294663998
        disableableCredentialTypes: []
        emailVerified: false
        enabled: true
        groups: []
        id: 013245e9-ba31-49b0-816c-aafa729a3030
        notBefore: 0
        realmRoles:
          - default-roles-dev-test
        requiredActions: []
        serviceAccountClientId: svcnow-test
        totp: false
        username: service-account-svcnow-test
    verifiableCredentialsEnabled: false
    verifyEmail: false
    waitIncrementSeconds: 60
    webAuthnPolicyAcceptableAaguids: []
    webAuthnPolicyAttestationConveyancePreference: not specified
    webAuthnPolicyAuthenticatorAttachment: not specified
    webAuthnPolicyAvoidSameAuthenticatorRegister: false
    webAuthnPolicyCreateTimeout: 0
    webAuthnPolicyExtraOrigins: []
    webAuthnPolicyPasswordlessAcceptableAaguids: []
    webAuthnPolicyPasswordlessAttestationConveyancePreference: not specified
    webAuthnPolicyPasswordlessAuthenticatorAttachment: not specified
    webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: false
    webAuthnPolicyPasswordlessCreateTimeout: 0
    webAuthnPolicyPasswordlessExtraOrigins: []
    webAuthnPolicyPasswordlessRequireResidentKey: not specified
    webAuthnPolicyPasswordlessRpEntityName: keycloak
    webAuthnPolicyPasswordlessRpId: ""
    webAuthnPolicyPasswordlessSignatureAlgorithms:
      - ES256
    webAuthnPolicyPasswordlessUserVerificationRequirement: not specified
    webAuthnPolicyRequireResidentKey: not specified
    webAuthnPolicyRpEntityName: keycloak
    webAuthnPolicyRpId: ""
    webAuthnPolicySignatureAlgorithms:
      - ES256
    webAuthnPolicyUserVerificationRequirement: not specified
